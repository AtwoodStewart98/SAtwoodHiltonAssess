## ASSESSMENT ONE

I spent about a day completing this one. I approached it as a fairly simple process of skeletonizing the page (keeping in mind to ground with semantic html), and then fleshing out with css and inline styling. For responsiveness, I treated the page as a strictly mobile view and ignored desktop formatting. Also, instead of using media queries, to avoid repeating code and keep it simple, I wrote the necessary heights and widths in vw instead of px, which scale better.

I pretty much eyeballed colors and tested different hex codes to best match the asset. The only true deviation is that I used a '>' sign for the arrows as opposed to searching for assets on the internet, but I wanted to move on to the second assessment because I knew it would take up a lot more of my time.

## ASSESSMENT TWO

I spent approximately three days working on this assessment. Before I could even begin, I needed to do some research, because I didn't know what Nextjs was, and what it had to do with React. I couldn't spend too much time delving the docs, since I needed to get started on working on the project, so I used the create-next-app extension to get myself started, and then from there work comfortably in React, which I do understand how to work in. However, this extension ended up causing major problems down the road.

For five out of the six points, development went smoothly. Indeed, if it were to be served locally, the application works as intended for each of those points; it captures the state for each of the people numbers, tracks what is checked, checks and unchecks lower room numbers per specifications 2 and 5. I ran into a hiccup when React complained about changing the checkboxes from being controlled to uncontrolled, which I was able to research on Google and StackOverflow, and solve. I even ran into a problem with the room check handler functions where I was mutating state, so I did additional research and found a way to bypass it by utilizing the spread operator (...) in my code.

I used jsx styling since that seemed to be the pro of using Nextjs (I couldn't find any documents stating that vanilla React has this tool). I was unhappy with repeating my styling in multiple component pages (testing shows the components can't read styling from the index.js page), but research says that Nextjs needs an extension to support css files, so I moved on since I wanted to finish the functionality of the application.

My application broke when I tried to install a localstorage extension to tackle step 6. I work from Mac Terminal to run the script to serve to localhost, and I was getting errors there about a failed to find script for Nextjs (when I tried to run the local development script). I went to my package.json and verified the script was there. I tooled around with the files, and when I couldn't find a way to get it to work, I scrapped my code and reverted to a previous (what I thought was) working version from GitHub. Even though my attempted-to-download localstorage extension wasn't there, I was getting the same errors. I concluded it was coming from something GitHub wasn't tracking, like my node_modules. Sure enough, it wasn't installing my .bin file correctly. Toyed around with wiping and redownloading my dependencies/extensions, but it wasn't working. I decided, I'll just make a new create-next-app and copy over my components and indexjs to the new one. That way, whatever's going on with my node_modules shouldn't carry over.

But it didn't work. I was running into new errors I hadn't before creating a fresh app. It wasn't downloading the react, react-dom, and next extensions correctly, and spat errors at me for 'couldn't-find-files', even after using the Mac sudo command to force it to run. I reinstalled my node package manager to make sure that wasn't what was messing up. No change.

Lots of Googling and StackOverflow later, I came across an open bug report for create-next-js that had to do with failed deployment from the vanilla extension, with the last comment from four days ago. The error recorded is similar, but not exact, to the one I have. I'm not familiar with Nextjs, or how exactly extension bugs get handled, but I can only assume that as they're trying to fix this bug, it's causing errors for my fresh application. See attached photo.

I don't know if there's another way to create a Nextjs based app, but I've pretty much run out of time to explore other ways to move forward. I also don't know if there's still a way to verify the app works despite not being able to be fired up through a testing program, as I've never built a testing program before, and I'm afraid to do so on a broken application.

So while I was unable to complete the second half of the assessment, hopefully I can still be evaluated by the code itself and the steps I took to overcome the problems thrown my way.
